{"ast":null,"code":"import _classCallCheck from \"/Users/HaniaGhannam/Documents/Team-404/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/HaniaGhannam/Documents/Team-404/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/HaniaGhannam/Documents/Team-404/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/HaniaGhannam/Documents/Team-404/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/HaniaGhannam/Documents/Team-404/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/HaniaGhannam/Documents/Team-404/Client/src/components/Taskform.js\";\nimport React, { Component } from \"./react\";\nimport Taskitem from \"./Taskitem\";\nimport Axios from \"./axios\";\nimport PropTypes from \"./prop-types\";\n\nvar Taskform =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Taskform, _Component);\n\n  function Taskform() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Taskform);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Taskform)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      taskform: []\n    };\n\n    _this.componentDidMount = function () {\n      Axios.get(\"http://localhost:3001/Routes/api/tasks/\").then(function (res) {\n        _this.setState({\n          taskform: res.data\n        });\n\n        console.log(res);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Taskform, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.taskform.map(function (taskform) {\n        return React.createElement(Taskitem, {\n          key: taskform.id,\n          taskform: taskform,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        });\n      });\n    }\n  }]);\n\n  return Taskform;\n}(Component);\n\nTaskform.propTypes = {\n  taskform: PropTypes.array.isRequired\n};\nexport default Taskform;","map":{"version":3,"sources":["/Users/HaniaGhannam/Documents/Team-404/Client/src/components/Taskform.js"],"names":["React","Component","Taskitem","Axios","PropTypes","Taskform","state","taskform","componentDidMount","get","then","res","setState","data","console","log","catch","error","props","map","id","propTypes","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,SAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;IACMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAIRC,iB,GAAoB,YAAM;AACxBL,MAAAA,KAAK,CAACM,GAAN,CAAU,yCAAV,EACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,cAAKC,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAEI,GAAG,CAACE;AAAhB,SAAd;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD,OAJH,EAKGK,KALH,CAKS,UAASC,KAAT,EAAgB;AACrBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OAPH;AAQD,K;;;;;;;6BAEQ;AACP,aAAO,KAAKC,KAAL,CAAWX,QAAX,CAAoBY,GAApB,CAAwB,UAAAZ,QAAQ;AAAA,eACrC,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,QAAQ,CAACa,EAAxB;AAA4B,UAAA,QAAQ,EAAEb,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADqC;AAAA,OAAhC,CAAP;AAGD;;;;EApBoBN,S;;AAsBvBI,QAAQ,CAACgB,SAAT,GAAqB;AACnBd,EAAAA,QAAQ,EAAEH,SAAS,CAACkB,KAAV,CAAgBC;AADP,CAArB;AAGA,eAAelB,QAAf","sourcesContent":["import React, { Component } from \"./react\";\nimport Taskitem from \"./Taskitem\";\nimport Axios from \"./axios\";\nimport PropTypes from \"./prop-types\";\nclass Taskform extends Component {\n  state = {\n    taskform: []\n  };\n\n  componentDidMount = () => {\n    Axios.get(\"http://localhost:3001/Routes/api/tasks/\")\n      .then(res => {\n        this.setState({ taskform: res.data });\n        console.log(res)\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  render() {\n    return this.props.taskform.map(taskform => (\n      <Taskitem key={taskform.id} taskform={taskform} />\n    ));\n  }\n}\nTaskform.propTypes = {\n  taskform: PropTypes.array.isRequired\n};\nexport default Taskform;\n"]},"metadata":{},"sourceType":"module"}