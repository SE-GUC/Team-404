{"version":3,"sources":["Components/Layout/Header.js","Components/ApplicationInfo.js","Components/Application.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","color","textAlign","padding","borderBottom","borderRadius","Header","react_default","a","createElement","style","ApplicationInfo","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","props","applicationInfo","map","src_Components_Application","id","delApplication","Component","Application","_this$props$applicati","candidate","partner","datetime","status","_this$props$applicati3","slicedToArray","task","Description","eta","levelofcommitment","monetarycompensation","skills","lifecyclestatus","experienceneeded","consultancy","formFormat","colSpan","onClick","bind","btnStyle","background","float","marginBottom","margin","App","state","application","setState","toConsumableArray","filter","together","Layout_Header","Components_ApplicationInfo","border","paddingBottom","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.931334b4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header(){\r\n    return (\r\n        <header style = {headerStyle}>\r\n            <h1>Application</h1>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nconst headerStyle = {\r\n  //  background : '#333',\r\n    color: '#fff',\r\n    textAlign:' center',\r\n    padding: '5px',\r\n    borderBottom: \"5px #ccc dotted\",\r\n    borderRadius: '5px'\r\n     \r\n}\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport Application from \"./Application\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class ApplicationInfo extends Component {\r\n  render() {\r\n    //ApplicationInfo in the parameter is used in everything else in here , references\r\n    //the one written in the APP\r\n    return this.props.applicationInfo.map(applicationInfo => (\r\n      <Application\r\n        key={applicationInfo.id}\r\n        applicationInfo={applicationInfo}\r\n        delApplication={this.props.delApplication}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\nApplicationInfo.propTypes = {\r\n  ApplicationInfo: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ApplicationInfo;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Layout/Header\";\r\nimport PropTypes from \"prop-types\";\r\nimport ApplicationInfo from \"./ApplicationInfo\";\r\nimport \"./Application.css\";\r\nexport class Application extends Component {\r\n  render() {\r\n    const {\r\n      id,\r\n      candidate,\r\n      partner,\r\n      datetime,\r\n      status,\r\n      task: [\r\n        {\r\n          Description,\r\n          eta,\r\n          levelofcommitment,\r\n          monetarycompensation,\r\n          skills,\r\n          lifecyclestatus,\r\n          experienceneeded,\r\n          consultancy\r\n        }\r\n      ]\r\n    } = this.props.applicationInfo;\r\n\r\n    return (\r\n      //outputs the names , references\r\n\r\n      <div style={formFormat}>\r\n        <p>\r\n          <table>\r\n            <th colSpan=\"2\">\r\n              <h3>Application Info</h3>\r\n            </th>\r\n            <th colSpan=\"2\">\r\n              <h3>Task Info</h3>\r\n            </th>\r\n            <tr>\r\n              <td>ID</td>\r\n              <td> {id}</td>\r\n              <td> Description </td>\r\n              <td> {Description}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Candidate</td>\r\n              <td>{candidate}</td>\r\n              <td> eta </td>\r\n              <td> {eta}</td>\r\n            </tr>\r\n            <tr>\r\n              <td> Partner</td>\r\n              <td> {partner}</td>\r\n              <td> levelofcommitment </td>\r\n              <td> {levelofcommitment}</td>\r\n            </tr>\r\n            <tr>\r\n              <td> Date-Time</td>\r\n              <td> {datetime}</td>\r\n              <td> Skills </td>\r\n              <td> {skills}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Status </td>\r\n              <td> {status}</td>\r\n              <td> monetarycompensation </td>\r\n              <td> {monetarycompensation}</td>\r\n            </tr>\r\n            <tr>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> lifecyclestatus </td>\r\n              <td> {lifecyclestatus}</td>\r\n            </tr>\r\n            <tr>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> experienceneeded </td>\r\n              <td>{experienceneeded}</td>\r\n            </tr>\r\n            <tr>\r\n              <td> </td>\r\n              <td> </td>\r\n              <td> consultancy </td>\r\n              <td> {consultancy}</td>\r\n            </tr>\r\n          </table>\r\n          <button\r\n            onClick={this.props.delApplication.bind(this, id)}\r\n            style={btnStyle}\r\n          >\r\n            X\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst btnStyle = {\r\n  background: \"#f00\",\r\n  color: \"#fff\",\r\n  padding: \"10px\",\r\n  borderRadius: \"50%\",\r\n  float: \"right\",\r\n  marginBottom: \"40px\"\r\n};\r\n\r\nconst formFormat = {\r\n  background: \"#4F5AF6\",\r\n  padding: \"5px 10px\",\r\n  borderRadius: \"5px\",\r\n  borderBottom: \"1px\",\r\n  margin: \"5px\",\r\n  marginBottom: \"20px\"\r\n};\r\n\r\n//stays the type of the bigger class\r\nApplication.propTypes = {\r\n  applicationInfo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Application;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Application from \"./Components/Application\";\r\nimport Header from \"./Components/Layout/Header\";\r\nimport ApplicationInfo from \"./Components/ApplicationInfo\";\r\n//import TaskInfo from \"./Components/TaskInfo\";\r\n//import Task from \"./Components/TaskInfo\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    application: [\r\n      {\r\n        id: 1,\r\n        candidate: \"asd\",\r\n        partner: \"asdasd\",\r\n        datetime: \"qqq\",\r\n        status: \"333\",\r\n        task: [\r\n          {\r\n            Description: \"{ type: String, required: true }\",\r\n            eta: \"{ type: Number, required: true }\",\r\n            levelofcommitment:\r\n              \"{ type: String, required: true, unique: false }\",\r\n            monetarycompensation: \"{ type: Number, required: true }\",\r\n            skills: \"{ type: String, required: true }\",\r\n            lifecyclestatus: \"{ type: String, required: true }\",\r\n            experienceneeded: \"{ type: String, required: true }\",\r\n            consultancy: \"{ type: String, required: true }\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 2,\r\n        candidate: \"asd\",\r\n        partner: \"asdasd\",\r\n        datetime: \"qqq\",\r\n        task: [\r\n          {\r\n            Description: \"{ type: String, required: true }\",\r\n            eta: \"{ type: Number, required: true }\",\r\n            levelofcommitment:\r\n              \"{ type: String, required: true, unique: false }\",\r\n            monetarycompensation: \"{ type: Number, required: true }\",\r\n            skills: \"{ type: String, required: true }\",\r\n            lifecyclestatus: \"{ type: String, required: true }\",\r\n            experienceneeded: \"{ type: String, required: true }\",\r\n            consultancy: \"{ type: String, required: true }\"\r\n          }\r\n        ],\r\n        status: \"333\"\r\n      }\r\n    ],\r\n    /*{\r\n        candidate: null,\r\n        partner: null,\r\n        datetime: null,\r\n        task: null\r\n        status: null\r\n      },\r\n    */\r\n    //canddiate should have name and stuff like that , user data..\r\n    candidate: [],\r\n    partner: [],\r\n    task: [\r\n      {\r\n        Description: \"{ type: String, required: true }\",\r\n        eta: \"{ type: Number, required: true }\",\r\n        levelofcommitment: \"{ type: String, required: true, unique: false }\",\r\n        partner: \"{ type: String, required: true }\",\r\n        monetarycompensation: \"{ type: Number, required: true }\",\r\n        skills: \"{ type: String, required: true }\",\r\n        lifecyclestatus: \"{ type: String, required: true }\",\r\n        experienceneeded: \"{ type: String, required: true }\",\r\n        consultancy: \"{ type: String, required: true }\"\r\n      },\r\n      {\r\n        Description: \"{ type: String, required: true }\",\r\n        eta: \"{ type: Number, required: true }\",\r\n        levelofcommitment: \"{ type: String, required: true, unique: false }\",\r\n        partner: \"{ type: String, required: true }\",\r\n        monetarycompensation: \"{ type: Number, required: true }\",\r\n        skills: \"{ type: String, required: true }\",\r\n        lifecyclestatus: \"{ type: String, required: true }\",\r\n        experienceneeded: \"{ type: String, required: true }\",\r\n        consultancy: \"{ type: String, required: true }\"\r\n      }\r\n    ]\r\n\r\n    /*\r\n    {\r\n        id: 2,\r\n        name: \"Wick John\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Jick Whon\"\r\n      }\r\n    ]\r\n    */\r\n  };\r\n  /* application information\r\n  attempt to put each information in an array and display all of em\r\n  supposed to display the skills required only in task not from candidate\r\n  const ApplicationSchema = new schema({\r\n    candidate: { type: String, required: true, unique: false },\r\n    partner: { type: String, required: true, unique: false },\r\n    datetime: { type: Date, required: true, unique: true },\r\n    task: { type: String, required: true, unique: false },\r\n    status: { type: String, required: false, unique: false }\r\n  })\r\n*/\r\n  /*componentDidMount() {\r\n    fetch(\"http://localhost:3000/api/Applications\")\r\n      .then(application => application.json())\r\n      .then(res => this.setState({ application: res.application }));\r\n  }\r\n*/\r\n  /*\r\n  todos: [\r\n      {\r\n        id: 1,\r\n        title: \"take out the trash\",\r\n        completed: false\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"do it \",\r\n        completed: true\r\n      },\r\n      {\r\n        id: 3,\r\n        title: \"be a man\",\r\n        completed: false\r\n      }\r\n    ]\r\n  };\r\n\r\n  markComplete = (id) => {\r\n    this.setState({\r\n      todos: this.state.todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    });\r\n  };\r\n*/\r\n\r\n  delApplication = id => {\r\n    this.setState({\r\n      application: [\r\n        ...this.state.application.filter(application => application.id !== id)\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={together}>\r\n          <Header />\r\n          <ApplicationInfo\r\n            applicationInfo={this.state.application}\r\n            delApplication={this.delApplication}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst together = {\r\n  border: \"10px\",\r\n  borderRadius: \"10px\",\r\n  background: \"#9D9FB9\",\r\n  margin: \"auto\",\r\n  paddingBottom: \"1px\"\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}